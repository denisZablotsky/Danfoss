
<div id="chart_div" style="width: 100%; height: 600px;"></div>
<a id="export" href="#" style="display: none" onclick="ExportToServer()">Export as Image</a>
<script type="text/javascript">

    google.charts.load('current', {packages: ['corechart', 'bar']});
    google.charts.setOnLoadCallback(drawStacked);
    var OyTitles = ["@Resource.QuantityTasks", "@Resource.QuantityCodeNumbers", "@Resource.PiecesOfCalc", "@Resource.QuantitySingleCals", "@Resource.SpeedClosure"];
    var graphTitles = ["@Resource.NewCalcGraph", "@Resource.CorrectGraph", "@Resource.NewCorrGraph", "@Resource.ReasonsGraph", "@Resource.CausesGraph", "@Resource.CalcDivGraph", "@Resource.OrdersGraph", "@Resource.SpeedGraph"];
    var monts = ["@Controllers_ChartController.Jan", "@Controllers_ChartController.Feb", "@Controllers_ChartController.Mar", "@Controllers_ChartController.Apr", "@Controllers_ChartController.May", "@Controllers_ChartController.June", "@Controllers_ChartController.July", "@Controllers_ChartController.Aug", "@Controllers_ChartController.Sept", "@Controllers_ChartController.Oct", "@Controllers_ChartController.Nov", "@Controllers_ChartController.Dec"];
    if(@ViewBag.FilterType == 1){
        var temp = @Html.Raw(Json.Encode(@ViewBag.Titles));
        var t = new Array(temp.length);
        for(var i = 0; i < t.length; i++){
            t[i] = monts[Number(temp[i])];
        }
    }

    var exportData;

    function drawStacked() {
        var allValues = @Html.Raw(Json.Encode(@ViewBag.AllValuesWeek));
        var goodValues = @Html.Raw(Json.Encode(@ViewBag.GoodValuesWeek));
        var titles = @Html.Raw(Json.Encode(@ViewBag.Titles));
        if(@ViewBag.FilterType == 1 && @ViewBag.MainTitle != 7 && @ViewBag.MainTitle != 6){
            var titles = t;
        }


        var dataN = new Array(allValues.length + 1);
        var count = 1;
        var flag = 1;
        dataN[0] = ["@Resource.Week", "@Resource.NormTasks", { role: "annotation" }, "@Resource.DelayedTasks", { role: "annotation" }, { role: "annotation" }];
        for(var i = 0; i < allValues.length; i++){
            if(allValues[i] != 0){
                var percent = (((allValues[i] - goodValues[i]) * 100) / allValues[i]).toFixed(0);
                dataN[count] = [titles[i], goodValues[i], goodValues[i], (allValues[i] - goodValues[i]), (allValues[i] - goodValues[i]), percent + "%"];
                count++;
                if (flag == 1)
                    flag = 0;
            }
        }
        if(allValues.length - count >= 0)
            dataN.splice(count, (allValues.length + 1) - count );

        if(flag == 1){
            dataN[1] = [0, 0, "@Resource.NoData", 0 , "", ""];
        }

        var data = google.visualization.arrayToDataTable(dataN);
        var view = new google.visualization.DataView(data);
        var option;
        if(@ViewBag.Type == 2){
            options = {
                title: graphTitles[Number(@ViewBag.MainTitle)],
                isStacked: true,
                hAxis: {
                    title: '@Resource.Month',
                    format: 'W'
                },
                vAxis: {
                    title: '@Resource.QuantityCalc',
                },
                colors: ['#92d14f', '#E20011']
            };
        }
        else if (@ViewBag.Type == 3){
            options = {
				title: graphTitles[Number(@ViewBag.MainTitle)],
                isStacked: true,
                hAxis: {title: "@Resource.Office", slantedText:true, slantedTextAngle:60 },
                vAxis: {
                    title: OyTitles[Number(@ViewBag.OyTitle)],
                },
                colors: ['#92d14f', '#E20011']
            };
        }
        else{
            options = {
                title: graphTitles[Number(@ViewBag.MainTitle)],
                isStacked: true,
                hAxis: {
                    title: '@Resource.WeekNumber',
                    format: 'W'
                },
                vAxis: {
                    title: '@Resource.QuantityCalc',
                },
                colors: ['#92d14f', '#E20011']
            };
        }


        var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
        chart.draw(view, options);
        exportData = chart.getImageURI();
    }



    function ExportToServer(){
        var string = exportData;
        var image = string.replace("data:image/png;base64,", "");
        $.ajax({
            type: "POST",
            url: "/Chart/Export",
            data: '{"imageData":"' + image + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",

        });
    }
</script>

